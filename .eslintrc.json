{
    // use eslint schema
    "$schema": "http://json.schemastore.org/eslintrc",
    "root": true,
    "plugins": [
        "@typescript-eslint",
        "import"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/strict-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked"
    ],
    "ignorePatterns": [
        "node_modules/",
        "dist/"
    ],
    "rules": {
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/no-confusing-void-expression": [
            "warn",
            {
                "ignoreArrowShorthand": true,
                "ignoreVoidOperator": true
            }
        ],
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extraneous-class": [
            "error",
            {
                "allowEmpty": true
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            {
                "selector": [
                    "function",
                    "variable"
                ],
                "format": [
                    "camelCase",
                    "UPPER_CASE",
                    "PascalCase"
                ],
                "leadingUnderscore": "allow",
                "trailingUnderscore": "allow"
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            },
            {
                "selector": "classProperty",
                "modifiers": [
                    "static",
                    "readonly"
                ],
                "format": [
                    "UPPER_CASE"
                ]
            }
        ],
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/unbound-method": [
            "error",
            {
                "ignoreStatic": true
            }
        ],
        "arrow-body-style": [
            "error",
            "as-needed"
        ],
        "comma-dangle": [
            "error",
            "never"
        ],
        "eqeqeq": "warn",
        "indent": "off",
        "no-console": 0,
        "no-constant-binary-expression": "warn",
        "no-constructor-return": "warn",
        "no-debugger": 2,
        "no-duplicate-imports": "warn",
        "no-empty": "error",
        "no-multiple-empty-lines": [
            "warn",
            {
                "max": 1
            }
        ],
        "no-new-native-nonconstructor": "warn",
        "no-promise-executor-return": [
            "warn",
            {
                "allowVoid": true
            }
        ],
        "no-self-compare": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "warn",
        "no-unmodified-loop-condition": "error",
        "no-unreachable-loop": "error",
        "no-unused-private-class-members": "error",
        "require-atomic-updates": [
            "error",
            {
                "allowProperties": true
            }
        ],
        "prefer-const": "warn",
        "semi": "off",
        "quotes": [
            "warn",
            "double",
            {
                "allowTemplateLiterals": true
            }
        ]
    }
}
